 SELECT NON EMPTY { [Measures].[F_Defect Loss%] } ON COLUMNS, NON EMPTY { ([Time Crate].[CR_Time YQMD].[CR_Date].ALLMEMBERS * [Tank].[Tank ID].[Tank ID].ALLMEMBERS * [FG Product].[FG_Gen].[FG_Gen].ALLMEMBERS * [FG Product].[FG_Thickness].[FG_Thickness].ALLMEMBERS * [Finishing Line].[Line ID].[Line ID].ALLMEMBERS * [Defect Tracking].[Defect ID].[Defect ID].ALLMEMBERS ) } DIMENSION PROPERTIES MEMBER_CAPTION, MEMBER_UNIQUE_NAME ON ROWS FROM ( SELECT ( { [Defect Tracking].[Defect ID].&[165], [Defect Tracking].[Defect ID].&[1028], [Defect Tracking].[Defect ID].&[168], [Defect Tracking].[Defect ID].&[835], [Defect Tracking].[Defect ID].&[170], [Defect Tracking].[Defect ID].&[837], [Defect Tracking].[Defect ID].&[167], [Defect Tracking].[Defect ID].&[834], [Defect Tracking].[Defect ID].&[169], [Defect Tracking].[Defect ID].&[836], [Defect Tracking].[Defect ID].&[171], [Defect Tracking].[Defect ID].&[838], [Defect Tracking].[Defect ID].&[311], [Defect Tracking].[Defect ID].&[252], [Defect Tracking].[Defect ID].&[407] } ) ON COLUMNS FROM ( SELECT ( { [Tank].[Tank ID].&[TC01], [Tank].[Tank ID].&[TC02], [Tank].[Tank ID].&[TC03], [Tank].[Tank ID].&[TC04], [Tank].[Tank ID].&[TC05], [Tank].[Tank ID].&[TC06], [Tank].[Tank ID].&[TC07], [Tank].[Tank ID].&[TC08], [Tank].[Tank ID].&[TC10], [Tank].[Tank ID].&[TC09], [Tank].[Tank ID].&[TC11], [Tank].[Tank ID].&[TC12], [Tank].[Tank ID].&[TC13], [Tank].[Tank ID].&[TC14], [Tank].[Tank ID].&[TC15], [Tank].[Tank ID].&[TC17], [Tank].[Tank ID].&[TC16], [Tank].[Tank ID].&[TC18], [Tank].[Tank ID].&[TC19], [Tank].[Tank ID].&[TC20], [Tank].[Tank ID].&[TC21] } ) ON COLUMNS FROM [PPD_Actual])) CELL PROPERTIES VALUE, BACK_COLOR, FORE_COLOR, FORMATTED_VALUE, FORMAT_STRING, FONT_NAME, FONT_SIZE, FONT_FLAGS

def query_data(date_range, tank):
    if not date_range or not tank:
        raise PreventUpdate  # 如果条件不完整，则不触发查询

    start_date, end_date = map(pd.to_datetime, date_range)

    # 查询 Melting Loss 数据
    query_m = f"""
        SELECT 
            NON EMPTY {{ [Measures].[M_Defect Loss%] }} ON COLUMNS, 
            NON EMPTY {{ ([Time Crate].[CR_Time YQMD].[CR_Date].ALLMEMBERS * 
                            [Tank].[Tank ID].&[{tank}] *
                            [Defect Tracking].[Defect ID].[Defect ID].ALLMEMBERS) }} 
            DIMENSION PROPERTIES MEMBER_CAPTION, MEMBER_UNIQUE_NAME 
        ON ROWS 
        FROM ( 
            SELECT ({{ [Time Crate].[CR_Date].&[{start_date.strftime("%Y-%m-%dT00:00:00")}] : 
                        [Time Crate].[CR_Date].&[{end_date.strftime("%Y-%m-%dT00:00:00")}] }}) 
            ON COLUMNS 
            FROM [PPD_Actual]
        ) 
        WHERE ( [Defect Tracking].[Defect Group].&[M_Melt Loss] ) 
        CELL PROPERTIES VALUE, BACK_COLOR, FORE_COLOR, FORMATTED_VALUE, FORMAT_STRING, FONT_NAME, FONT_SIZE, FONT_FLAGS
    """

    # 查询 Finishing Loss 数据
    query_f = f"""
        SELECT NON EMPTY {{ [Measures].[F_Defect Loss%] }} ON COLUMNS, 
            NON EMPTY {{ ([Time Crate].[CR_Time YQMD].[CR_Date].ALLMEMBERS * 
                            [Tank].[Tank ID].&[{tank}] *
                            [Defect Tracking].[Defect ID].[Defect ID].ALLMEMBERS) }} 
            DIMENSION PROPERTIES MEMBER_CAPTION, MEMBER_UNIQUE_NAME 
        ON ROWS 
        FROM ( 
            SELECT (
                {{ [Defect Tracking].[Defect ID].&[165], 
                [Defect Tracking].[Defect ID].&[1028], 
                [Defect Tracking].[Defect ID].&[311], 
                [Defect Tracking].[Defect ID].&[252], 
                [Defect Tracking].[Defect ID].&[407], 
                [Defect Tracking].[Defect ID].&[171], 
                [Defect Tracking].[Defect ID].&[838], 
                [Defect Tracking].[Defect ID].&[169], 
                [Defect Tracking].[Defect ID].&[836], 
                [Defect Tracking].[Defect ID].&[167], 
                [Defect Tracking].[Defect ID].&[834], 
                [Defect Tracking].[Defect ID].&[170], 
                [Defect Tracking].[Defect ID].&[837], 
                [Defect Tracking].[Defect ID].&[168], 
                [Defect Tracking].[Defect ID].&[835] }} 
        ) ON COLUMNS 
        FROM ( 
            SELECT ({{ [Time Crate].[CR_Date].&[{start_date.strftime("%Y-%m-%dT00:00:00")}] : 
                        [Time Crate].[CR_Date].&[{end_date.strftime("%Y-%m-%dT00:00:00")}] }}) 
            ON COLUMNS 
            FROM [PPD_Actual]
        ) 
        WHERE ( [Time Crate].[CR_Date].CurrentMember ) )
        CELL PROPERTIES VALUE, BACK_COLOR, FORE_COLOR, FORMATTED_VALUE, FORMAT_STRING, FONT_NAME, FONT_SIZE, FONT_FLAGS
    """

    try:
        # 数据清理
        df_cleaned_M = clean_data(get_PPD(query_m))
        df_cleaned_F = clean_data(get_PPD(query_f))
        # 将数据转换为字典格式返回
        return df_cleaned_M.to_dict("records"), df_cleaned_F.to_dict("records")
        
    except Exception as e:
        print("Error occurred during query execution:")
        print(e)
        return [], []
