def calculate_ranges(data, num_curves):
    # 計算每條曲線的原始範圍及視覺範圍
    visual_ranges = []
    for i, curve in enumerate(data):
        y_min, y_max = min(curve), max(curve)  # 原始數據範圍
        y_vis_min, y_vis_max = i / num_curves, (i + 1) / num_curves  # 視覺範圍
        scale = (y_vis_max - y_vis_min) / (y_max - y_min)  # 映射比例
        offset = y_vis_min - y_min * scale  # 偏移量
        visual_ranges.append((scale, offset, y_min, y_max))
    return visual_ranges

def map_data_to_visual(data, ranges):
    # 將每條曲線數據映射到視覺範圍
    visual_data = []
    for curve, (scale, offset, _, _) in zip(data, ranges):
        visual_curve = [y * scale + offset for y in curve]
        visual_data.append(visual_curve)
    return visual_data

# 測試數據
data = [
    [50, 60, 70, 80],  # 曲線 1
    [10, 20, 30, 40],  # 曲線 2
    [200, 250, 300, 350]  # 曲線 3
]
num_curves = len(data)

# 計算範圍與映射
ranges = calculate_ranges(data, num_curves)
visual_data = map_data_to_visual(data, ranges)

# 打印結果
for i, (curve, (scale, offset, y_min, y_max)) in enumerate(zip(visual_data, ranges)):
    print(f"曲線 {i+1}: 視覺數據 = {curve}, 原始範圍 = [{y_min}, {y_max}]")
