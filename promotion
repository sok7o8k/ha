# 如果有選擇 PI tags 且有日期範圍，則提取並繪製 PI 數據
if tags and start_date and end_date:
    color_idx = 0
    for idx, tag in enumerate(tags):
        if tag in df.columns:
            # 判斷 defect 是否為空
            if not defect:
                # 無選擇 defect：第一個 tag 使用主 Y 軸，其餘 tags 疊加到額外 Y 軸
                if idx == 0:
                    fig.add_trace(go.Scatter(
                        x=df.index,
                        y=df[tag],
                        mode='lines',
                        name=tag,
                        line=dict(color=color_palette[color_idx % len(color_palette)]),
                        yaxis='y',  # 主 Y 軸
                    ))
                else:
                    fig.add_trace(go.Scatter(
                        x=df.index,
                        y=df[tag],
                        mode='lines',
                        name=tag,
                        line=dict(color=color_palette[color_idx % len(color_palette)]),
                        yaxis=f'y{idx+1}',  # 額外 Y 軸
                    ))
                    fig.update_layout(
                        **{f'yaxis{idx+1}': dict(
                            overlaying='y',  # 疊加到主 Y 軸
                            side='right',
                            position=1 - 0.04 * (idx - 1),  # 計算位置
                            titlefont=dict(color=color_palette[color_idx % len(color_palette)]),
                            tickfont=dict(color=color_palette[color_idx % len(color_palette)]),
                        )}
                    )
            else:
                # 有選擇 defect：所有 tags 疊加到額外 Y 軸
                fig.add_trace(go.Scatter(
                    x=df.index,
                    y=df[tag],
                    mode='lines',
                    name=tag,
                    line=dict(color=color_palette[color_idx % len(color_palette)]),
                    yaxis=f'y{idx+2}',  # 額外 Y 軸
                ))
                fig.update_layout(
                    **{f'yaxis{idx+2}': dict(
                        overlaying='y',  # 疊加到主 Y 軸
                        side='right',
                        position=1 - 0.04 * idx,  # 計算位置
                        titlefont=dict(color=color_palette[color_idx % len(color_palette)]),
                        tickfont=dict(color=color_palette[color_idx % len(color_palette)]),
                    )}
                )

            color_idx += 1  # 更新顏色索引
