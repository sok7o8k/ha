# 計算總共的 Y 軸數量
total_y_axes = len(tags) if tags else 1  # 預設至少有主 Y 軸
if defect:  # 若有選擇 defect，額外計算堆疊圖的主 Y 軸
    total_y_axes += 1

# 動態調整 X 軸 domain（減少退縮範圍）
x_domain_end = 1 - ((total_y_axes - 1) * 0.04) if total_y_axes > 1 else 1

# 計算選擇的 defect 數量
defect_count = len(defect) if defect else 0

# 動態調整頂部邊距 (預設 90，額外增加 10 像素 * 每 3 個 defect)
top_margin = 90 + 30 * (total_y_axes // 3) + 10 * (defect_count // 3)

# 更新圖表的佈局和標題
fig.update_layout(
    showlegend=True,
    title=f'{tank} Performance and Process Chart',
    xaxis=dict(
        domain=[0, x_domain_end],  # 動態設定 X 軸的 domain 範圍
        tickformat='%Y-%m-%d\n%H:%M:%S',
        title='Date'
    ),
    yaxis=dict(tickformat='.2%', title='Value'),  # 主 Y 軸設定
    height=500,
    margin=dict(
        b=0, 
        l=0, 
        r=90 + (total_y_axes - 1) * 30,  # 動態增加右邊邊距，避免軸標題擁擠
        t=top_margin  # 頂部邊距根據 defect 數量動態調整
    ),
    dragmode='zoom',
    legend=dict(
        orientation="h", 
        yanchor="bottom", 
        y=1.02, 
        xanchor="right", 
        x=1
    ),
)
