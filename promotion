# RadioItems for PI data Y-axis settings
dcc.RadioItems(
    id="pi-y-axis-setting",
    options=[
        {'label': 'Single', 'value': 'single'},
        {'label': 'Multiple', 'value': 'multiple'}
    ],
    value='multiple',  # 預設為 multiple 模式
    labelStyle={'display': 'inline-block', 'margin-right': '10px'},
    style={'margin-bottom': '10px'}
)



@app.callback(
    Output("combined-graph", "figure"),
    Input("tags", "value"),
    Input("date-picker", "value"),
    Input("interval", "value"),
    Input("tank-picker", "value"),
    Input("loss-type", "value"),
    Input("defect-picker", "value"),
    Input("pi-y-axis-setting", "value")  # 新增 Y 軸模式輸入
)
def update_combined_graph(tags, date_range, interval, tank, loss_type, defect, pi_y_axis_mode):
    fig = go.Figure()
    axis_count = 2  # 默認軸數量（主 Y 軸 + 一個右側 Y 軸）

    if not date_range or len(date_range) != 2:
        raise PreventUpdate
    start_date, end_date = map(pd.to_datetime, date_range)

    # 略去處理 Loss 的部分，保持原邏輯不變 ...

    # 如果有選擇 PI tags 且有日期範圍，則提取並繪製 PI 數據
    if tags and start_date and end_date:
        servername = "grape"  # 設定 PI 伺服器名稱
        with PI.PIServer(server=servername) as server:
            points = server.search(tags)
            if len(points) > 0:
                series = []
                for p in points:
                    # 獲取數據並進行取樣 ...
                    # 略去數據處理的部分，保持原邏輯不變 ...
                    
                    # 添加 Y 軸設置根據選擇切換
                    if pi_y_axis_mode == 'single':
                        # 所有 PI tags 使用同一個右側 Y 軸
                        fig.add_trace(go.Scatter(
                            x=df.index,
                            y=df[p.name],
                            mode='lines',
                            name=p.name,
                            line=dict(color=color_palette[color_idx % len(color_palette)]),
                            yaxis='y2',  # 固定使用第二個 Y 軸
                            hovertemplate='Time: %{x}<br>Value: %{y:.2f}'
                        ))
                    elif pi_y_axis_mode == 'multiple':
                        # 每個 PI Tag 使用單獨的右側 Y 軸
                        fig.add_trace(go.Scatter(
                            x=df.index,
                            y=df[p.name],
                            mode='lines',
                            name=p.name,
                            line=dict(color=color_palette[color_idx % len(color_palette)]),
                            yaxis='y' + str(axis_count),  # 動態增加 Y 軸
                            hovertemplate='Time: %{x}<br>Value: %{y:.2f}'
                        ))
                        fig.update_layout(
                            **{'yaxis' + str(axis_count): dict(
                                titlefont=dict(color=color_palette[color_idx % len(color_palette)]),
                                tickfont=dict(color=color_palette[color_idx % len(color_palette)]),
                                anchor="free",
                                overlaying='y',
                                side="right",
                                position=1 - (0.04 * (axis_count - 1))
                            )}
                        )
                        axis_count += 1  # 更新軸數量
                    color_idx += 1

    # 更新圖表的佈局和標題
    total_y_axes = len(tags) if tags else 1
    x_domain_end = 1 if pi_y_axis_mode == 'single' else 1 - ((total_y_axes - 1) * 0.04)
    defect_count = len(defect) if defect else 0
    top_margin = 90 + 30 * (total_y_axes // 3) + 10 * (defect_count // 3)

    fig.update_layout(
        showlegend=True,
        title=f'{tank} Performance and Process Chart',
        xaxis=dict(
            domain=[0, x_domain_end],
            tickformat='%Y-%m-%d\n%H:%M:%S',
            title='Date'
        ),
        yaxis=dict(tickformat='.2%', title='Value'),
        height=500,
        margin=dict(
            b=0,
            l=0,
            r=90 + (total_y_axes - 1) * 30,
            t=top_margin
        ),
        dragmode='zoom',
        legend=dict(
            orientation="h",
            yanchor="bottom",
            y=1.02,
            xanchor="right",
            x=1
        ),
    )

    return fig
